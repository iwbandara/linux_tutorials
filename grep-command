# Use of grep command

# Syntax:

    grep [options] pattern <file>

# Examples:

    $ grep three file1 # search & disply the sentences that include the word 'three'.

# To reverse the search (output lines that donâ€™t match the pattern), use the -v parameter.

    grep -v pattern <file>

# To find the line numbers where the matching patterns are found, use the -n parameter.

    grep -n pattern <file>

# To see a count of how many lines contain the matching pattern, use the -c parameter

    grep -c pattern <file>

# To see a line numbers with the matching pattern, use the -n parameter

    grep -n pattern <file>

# To check the matching pattern recursively, use the -r parameter

    grep -r pattern <path/to/the/directory>

# To get exact matches from the file

    grep -x pattern <file>

# To search for a complete word of the pattern;

    grep -w pattern <file>

# To specify more than one matching pattern, use the -e parameter to specify each individual pattern

    grep -e [pattern1] -e [pattern2] <file>

# By default, the grep command uses basic Unix-style regular expressions to match patterns.
# A Unix-style regular expression uses special characters to defi ne how to look for matching
patterns.

# Use of grep command on multiple files;

    # grep "sample" file1 file2

    # grep -l "sample" file1 file2 -> -l option only display the file name, not the matched content

# Use of egrep command

    # egrep "man|lan|wan" file1 -> instead of -e option egrep command can be used to extend the grep search

